【a.yang.com 页面的 script 标签引用 b.yang.com 的服务端数据】

- 前端

约定参数 callback；
将函数 getData 作为 callback 值传递给后端
定义 getData 函数
使用 DOM 动态操控返回数据

- 服务端

将数据包装成执行函数的形式并返回给前端

- 注意

尝试改变当前页面的域，与 AJAX 请求域相同或不同，体会一下浏览器的跨域请求报错提示、同源策略、实现跨域请求。

例子：当前页面域：a.yang.com  ， AJAX 请求域：b.yang.com

jsonp 不是向服务器读写资源，而仅仅是引用资源后立刻执行它

- 原理

使用 script 标签引用资源，该资源是服务端包装后的返回数据，数据是函数调用的形式（我们原本希望得到的数据作为参数传递到执行函数内），前端将该数据放到页面上，就可以调用我们已经定义好的函数，这样就可以处理我们原本希望得到的数据了

script 标签引用资源：本质――发送请求，加载资源，作为 JS 代码立刻执行
并不使用 AJAX 请求数据，而是加载 JS 文件，所以不受同源策略影响

- 最后

使用该方法绕过了 AJAX 去请求数据，Jsonp 和 Ajax 存在本质上的不同，但都是完成同样一个功能：向后端请求数据

- 优缺点

 - 优点：不存在兼容问题
 - 缺点：仅支持 get 请求方式、可能会存在恶意 XSS 攻击

- 发展观念

 - 因为同源策略：存在 jsonp，但 jsonp 需要后台包装，使用繁琐
 - 新的实现方式：cors

- 额外作业
 
 - 封装 jsonp ，使其想 Ajax 一样使用