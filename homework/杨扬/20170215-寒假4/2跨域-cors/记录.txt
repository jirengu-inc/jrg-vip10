【a.yang.com 页面的 AJAX 向 b.yang.com 页面请求数据】

- 前端：a.yang.com

正常使用 AJAX 向服务端发送请求

- 服务端：b.yang.com

在返回结果中加入响应头：Access-Control-Allow-Origin

- 注意

尝试改变当前页面的域，与 AJAX 请求域相同或不同，体会一下浏览器的跨域请求报错提示、同源策略、实现跨域请求。

例子：当前页面域：a.yang.com  ， AJAX 请求域：b.yang.com

- 原理

当使用 AJAX 发送请求时，浏览器会自动给请求加入一个请求头信息 origin，代表该 AJAX 请求所在页面的域
如果确定接受上述请求，则服务端在返回结果中加入响应头：Access-Control-Allow-Origin，代表服务端同意接受谁的跨域请求

浏览器会自动匹配请求头和响应头，如果匹配成功，浏览器则处理数据的移动，否则，浏览器将无视数据
浏览器相当于最后一位监察官：让符合要求的请求和数据顺利通行，让不符合要求的请求和数据停止通行

- 截图示例【】

- 最后

CORS 是一种新型的跨域问题的解决方案：它定义了一种跨域访问的机制，可以让 AJAX 实现跨域访问。

- 优缺点

 - 优点：使用简单方便、支持 POST 请求方式
 - 缺点：存在兼容问题――仅支持 IE10 以上

- 发展观念

jsonp 和 cors 都是主流的跨域方式，最主要的还是看需求程度，其中最大的问题就是兼容程度，请按需选择。